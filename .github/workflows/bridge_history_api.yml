name: BridgeHistoryAPI

on:
  push:
    branches:
      - main
      - staging
      - develop
      - alpha
    paths:
      - 'bridge-history-api/**'
      - '.github/workflows/bridge_history_api.yml'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - 'bridge-history-api/**'
      - '.github/workflows/bridge_history_api.yml'

defaults:
  run:
    working-directory: 'bridge-history-api'

jobs:
  check:
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      # Set up Go environment
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x

      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Run linting
      - name: Lint
        run: |
          rm -rf $HOME/.cache/golangci-lint
          make lint

  test:
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      # Set up Go environment
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x

      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Run tests
      - name: Test
        run: make test

      # Upload coverage reports to Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: bridge-history-api
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  goimports-lint:
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      # Set up Go environment
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x

      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install goimports
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      # Run goimports and tidy up modules
      - name: Run goimports and go mod tidy
        run: |
          goimports -local scroll-tech/bridge-history-api/ -w .
          go mod tidy

      # Verify no changes from goimports and go mod tidy
      - name: Verify no changes from goimports and go mod tidy
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Uncommitted changes found after running goimports and go mod tidy. Please commit these changes."
            exit 1
          fi
